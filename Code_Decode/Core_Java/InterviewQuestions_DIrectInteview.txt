
----- Capegemini ------ [https://www.youtube.com/watch?v=Y5o9aUR8ujY]
# Different between String Builder & String Buffer
- Both are used to do String related operations
- StringBuilder is synchronouse which means it can allow only one thread at time. when we work on single thread environment then use it
- StringBuffer is asynchronouse which means it can allow multiple threads at at time, when we work on multiple thread environment the we use it

# Different between ArryList & LinkedList

# Explain purpose of finalized() and Is it recomended to use it

# Different between Comparable & Comparator, When we use comparable & Comparator

# What is exceptions

# How to handle validations in spring boot application

# Status codes in spring boot https

# What is spring boot profiles & How we can use

# What is spring boot actuator

# How we can configure custom health indicator in spring boot application

# What is API Gate way

# Differenet between authentication & authorization

# What is transaction & How to handle distributed transations in microservices*

# public static void main(String[] args){
   List<String> list = Arrays.asList("apple", "bat", "cat", "banana", "dog");
   Map<String, Long> strLenMap =  list.stream().collect(Collector.groupBy(String::length, Collector.couting()));
   System.out.println(strLenMap);
   O/p : {3=3, 5=1, =1}

# Write SQL Query to find Top 3 employee salary
  SELECT DISTRICT SALARY FROM EMPLOYEES ORDER BY SALARY DESC LIMIT 3;

# Real time Scenario like, In application have memory leakage issue, that is happening in production serve. so on which places you trying to investigation issue*

-------- TCS ----------- [https://www.youtube.com/watch?v=yVj2EgwZxk4]
# How many ways to create thread & which is recomended way to create thread
- We can create thread in 3 ways
  1. By extend Thread class and override run()
  2. By implement RunnableInterface
  3. By using Executor framework
- Recomended way is if we want to create multiple thread then we can use Executor framework, and if want to create single thread and our class is not extend anything then use Thread class or use RunnableInterface

# What is dead lock in threads
- Which means two or more threads are waiting each other for resources, like thread1 is holding resource1, but thread2 is waiting for resource2 but that is holding in another thread is called dead lock
- We can avoid this, like we shold follow lock is consistente order, etc*

# What are the stages in threads
- When we create new thread that thread stage is new stage
- wheneven that thread is ready to execute that stage is ready state
- wheneven that thread is waiting for other functons that is called waiting stage
- then entered into terminated stage 

# Is is possible to restart terminated state thread
- If we try to restart terminated state thread that also called new thread only

# What is throw and throws keyword
- This two are used to handle the exception
- If we want to throw the exception explicitly then we have to use throw key word in try block ( For example I am trying to get Employee data, but there is no Employeee class. so explicitly am throwing Employee class not found exception)
- And throws is method signature keyword, which is used to tell method may throws exeception

# What are the different types of exceptions in java
- We have two types of exceptions like checked exceptions and unchecked exceptions
- checked exceptions are checked by compiler at compil time
- unchecked exceptions are not checked by compiler, at run time will check unchecked exceptions. like Nullpointer exception, ArrayIndexOutofBound Exception 

# What is try with resource in exceptions *

# What is equals operator(==) & equals method
- equals operator is used to compare object reference
- equals() is used to compare object content like
Ex: String str1 = "ABC";
    String str2 = new String("ABC");
    System.out.printnln(str1 === str2) // output : false
    System.out.println(str1.equals(str2)) // output : true

# Different between abstract class and interface & when to go for which one
- Abstract class can have abstract methods as well as non abstract methods, but in interface can have only abstract methods. but from java8 added default and static methods in interface
- Class can extend only one class only, but class can implement multiple interfaces

# What is dependency injections
- Basically dependency injection is design pattern, which means injecting the dependencies into a class instead of creating beans
- We can use annotations like @Autowired, @Controller, @Service, @Repository and @Component annotations for dependency injection

# What is circular dependency in spring boot*

# What is CRUD repository & JPA repository*

# In spring boot application how to tune application perfomance
- To improve applcation perfomance I can use caching, I am trying to avoid no of database call frequently, i will save in cache level and retrive data from cache
- I can configure actualtor to monitor application health & perfomance and identify the where it was taking more time
- And try to use Asychronouse processing using @Asynch annotation

# How to divide monilithic to microservice application*
- 

# Different between synchronouse and asynchronouse communication in microservice*

# Write programe to find list of words characteds from sentense, and sorted alphabetical order using java 8
- public static void main(String[] args){
  String str = "Java is fun and Java is powerfull";
  List<String> uniqueWords = Arrays.stream(str.split(" ")).map(String::toLowerCase).distinct().sorted().collect(Collectors.toList());
  System.out.println(uniqueWords);
  }








